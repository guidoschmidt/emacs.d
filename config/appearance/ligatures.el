;;; ligatures --- Configure font ligatures -*- lexical-binding: t -*-
;;; Commentary:

;;; Code:
;; (defun setup-pragmata-ligatures ()
;;   (setq prettify-symbols-alist
;;         (append prettify-symbols-alist
;; '(;;("!!"   . ?)
;; ("!="   . ?)
;; ("!=="  . ?)
;; ("!≡"   . ?)
;; ("!≡≡"  . ?)
;; ("!>"   . ?)
;; ("#("   . ?)
;; ("#_"   . ?)
;; ("#{"   . ?)
;; ("#?"   . ?)
;; ("#>"   . ?)
;; ("%="   . ?)
;; ("%>"   . ?)
;; ("<~"   . ?)
;; ("&%"   . ?)
;; ("&&"   . ?)
;; ("&*"   . ?)
;; ("&+"   . ?)
;; ("&-"   . ?)
;; ("&/"   . ?)
;; ("&="   . ?)
;; ("&&&"  . ?)
;; ("&>"   . ?)
;; ("$>"   . ?)
;; ("~>"   . ?)
;; ("***"  . ?) ; I prefer not to use this one
;; ("*="   . ?)
;; ("*/"   . ?)
;; ("*>"   . ?)
;; ("++"   . ?)
;; ("+++"  . ?)
;; ("+="   . ?)
;; ("+>"   . ?)
;; ("--"   . ?)
;; ("-<"   . ?)
;; ("-<<"  . ?)
;; ("-="   . ?)
;; ("->>"  . ?)
;; ("---"  . ?)
;; ("-->"  . ?)
;; (".."   . ?)
;; ("..."  . ?)
;; ("..<"  . ?)
;; (".>"   . ?)
;; (".~"   . ?)
;; (".="   . ?)
;; ("/*"   . ?)
;; ("//"   . ?)
;; ("/>"   . ?)
;; ("/="   . ?)
;; ("/=="  . ?)
;; ("///"  . ?)
;; ("/**"  . ?)
;; ("::"   . ?)
;; (":="   . ?)
;; (":≡"   . ?)
;; (":>"   . ?)
;; (":=>"  . ?)
;; ("<$>"  . ?)
;; ("<*"   . ?)
;; ("<*>"  . ?)
;; ("<+>"  . ?)
;; ("<-"   . ?) ; I like different arrows (see below)
;; ("<<"   . ?)
;; ("<<<"  . ?)
;; ("<<="  . ?)
;; ("<="   . ?)
;; ("<=>"  . ?) ; I like different arrows (see below)
;; ("<>"   . ?)
;; ("<|>"  . ?)
;; ("<<-"  . ?)
;; ("<|"   . ?)
;; ("<=<"  . ?)
;; ("<~~"  . ?)
;; ("<<~"  . ?)
;; ("<$"   . ?)
;; ("<+"   . ?)
;; ("<!>"  . ?)
;; ("<@>"  . ?)
;; ("<#>"  . ?)
;; ("<%>"  . ?)
;; ("<^>"  . ?)
;; ("<&>"  . ?)
;; ("<?>"  . ?)
;; ("<.>"  . ?)
;; ("</>"  . ?)
;; ("<\>"  . ?)
;; ("<\">" . ?)
;; ("<:>"  . ?)
;; ("<~>"  . ?)
;; ("<**>" . ?)
;; ("<<^"  . ?)
;; ("<!"   . ?)
;; ("<@"   . ?)
;; ("<#"   . ?)
;; ("<%"   . ?)
;; ("<^"   . ?)
;; ("<&"   . ?)
;; ("<?"   . ?)
;; ("<."   . ?)
;; ("</"   . ?)
;; ("<\\"  . ?)
;; ("<\""  . ?)
;; ("<:"   . ?)
;; ("<->"  . ?)
;; ("<!--" . ?)
;; ("<--"  . ?)
;; ("=<<"  . ?)
;; ("=="   . ?)
;; ("==="  . ?)
;; ("==>"  . ?) ; I like different arrows (see below)
;; ("=>"   . ?)  ; I like different arrows (see below)
;; ("=~"   . ?)
;; ("=>>"  . ?)
;; ("≡≡"   . ?)
;; ("≡≡≡"  . ?)
;; ("≡:≡"  . ?)
;; (">-"   . ?)
;; (">="   . ?)
;; (">>"   . ?)
;; (">>-"  . ?)
;; (">>="  . ?)
;; (">>>"  . ?)
;; (">=>"  . ?)
;; (">>^"  . ?)
;; ("??"   . ?)
;; ("?~"   . ?)
;; ("?="   . ?)
;; ("?>"   . ?)
;; ("^="   . ?)
;; ("^."   . ?)
;; ("^?"   . ?)
;; ("^.."  . ?)
;; ("^<<"  . ?)
;; ("^>>"  . ?)
;; ("^>"   . ?)
;; ("\\\\" . ?)
;; ("\\>"  . ?)
;; ("@>"   . ?)
;; ("|="   . ?)
;; ("||"   . ?)
;; ("|>"   . ?)
;; ("|||"  . ?)
;; ("|+|"  . ?)
;; ("~="   . ?)
;; ("~~>"  . ?)
;; ("~>>"  . ?)

;; Personal preference: I like this set of arrows better than default
;; ("<-"   . ?🡐)
;; ("->"   . ?🡒)
;; ("=>"   . ?⇒)
;; ("<=>"  . ?⟺)
;; ("<==>" . ?⟺)
;; ("==>"  . ?⟹)
;; ("<=="  . ?⟸)
;; ("|->"  . ?⟼)
;; ("<-|"  . ?⟻)
;; ("|=>"  . ?⟾)
;; ("<=|"  . ?⟽)
;; ))))

;; (defun refresh-pretty ()
;;   (prettify-symbols-mode -1)
;;   (prettify-symbols-mode +1))

;; Hooks for modes in which to install the Pragmata ligatures
;; (mapc (lambda (hook)
;;         (add-hook hook (lambda () (setup-pragmata-ligatures) (refresh-pretty))))
;;       '(text-mode-hook
;;         prog-mode-hook))

;; (global-prettify-symbols-mode +1)

(let ((alist '((33 . ".\\(?:\\(?:==\\|!!\\)\\|[!=]\\)")
               (35 . ".\\(?:###\\|##\\|_(\\|[#(?[_{]\\)")
               (36 . ".\\(?:>\\)")
               (37 . ".\\(?:\\(?:%%\\)\\|%\\)")
               (38 . ".\\(?:\\(?:&&\\)\\|&\\)")
               (42 . ".\\(?:\\(?:\\*\\*/\\)\\|\\(?:\\*[*/]\\)\\|[*/>]\\)")
               (43 . ".\\(?:\\(?:\\+\\+\\)\\|[+>]\\)")
               (45 . ".\\(?:\\(?:-[>-]\\|<<\\|>>\\)\\|[<>}~-]\\)")
               ;; May produce: error in process filter: Attempt to shape unibyte text
               ;; (46 . ".\\(?:\\(?:\\.[.<]\\)\\|[.=-]\\)")
               (47 . ".\\(?:\\(?:\\*\\*\\|//\\|==\\)\\|[*/=>]\\)")
               (48 . ".\\(?:x[a-zA-Z]\\)")
               (58 . ".\\(?:::\\|[:=]\\)")
               (59 . ".\\(?:;;\\|;\\)")
               (60 . ".\\(?:\\(?:!--\\)\\|\\(?:~~\\|->\\|\\$>\\|\\*>\\|\\+>\\|--\\|<[<=-]\\|=[<=>]\\||>\\)\\|[*$+~/<=>|-]\\)")
               (61 . ".\\(?:\\(?:/=\\|:=\\|<<\\|=[=>]\\|>>\\)\\|[<=>~]\\)")
               (62 . ".\\(?:\\(?:=>\\|>[=>-]\\)\\|[=>-]\\)")
               (63 . ".\\(?:\\(\\?\\?\\)\\|[:=?]\\)")
               (91 . ".\\(?:]\\)")
               (92 . ".\\(?:\\(?:\\\\\\\\\\)\\|\\\\\\)")
               (94 . ".\\(?:=\\)")
               (119 . ".\\(?:ww\\)")
               (123 . ".\\(?:-\\)")
               (124 . ".\\(?:\\(?:|[=|]\\)\\|[=>|]\\)")
               (126 . ".\\(?:~>\\|~~\\|[>=@~-]\\)")
               )
             ))
  (dolist (char-regexp alist)
    (set-char-table-range composition-function-table (car char-regexp)
                          `([,(cdr char-regexp) 0 font-shape-gstring]))))

(provide 'ligatures)
;;; ligatures ends here
